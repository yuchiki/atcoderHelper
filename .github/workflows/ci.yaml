---
name: golang-ci
on:  # yamllint disable-line rule:truthy
  push:
    tags:
      - v+
    branches:
      - master
  pull_request:
jobs:
  build:
    name: build
    strategy:
      matrix:
        go-version: ["1.14"]  # release時には 1.10 ~ 1.15 で確かめる
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - name: enable problem matcher
        run: echo "::add-matcher::.github/problem-matcher.json"
      - name: setup go
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: build
        run: go build ./...
  test:
    name: test
    strategy:
      matrix:
        go-version: ["1.14"]  # release時には 1.10~1.15で確かめる
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - name: enable problem matcher
        run: echo "::add-matcher::.github/problem-matcher.json"
      - name: setup go
        uses: actions/setup-go@v1
        with:
          go-version: ${{matrix.go-version}}
      - name: test
        run: go test ./...
  lint:
    name: lint
    runs-on: ubuntu-latest  # lintはコードの問題なので、意図的に1環境でしかテストしない
    steps:
      - uses: actions/checkout@v2
      - name: enable problem matcher
        run: echo "::add-matcher::.github/problem-matcher.json"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
      - name: yamllint
        uses: ibiqlik/action-yamllint@v3
  notification:
    name: notification
    if: always() #"ho"
#    if: always() && github.event.event_name == 'push'
    needs:
      - build
      - test
      - lint
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/workflow-conclusion-action@v1
      - name: notify to discord
        uses: sarisia/actions-status-discord@v1
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
